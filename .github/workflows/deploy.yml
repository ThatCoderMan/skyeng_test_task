name: deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Uploading project files to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          source: "backend/,infra/,requirements.txt"
          target: /home/${{ secrets.USER }}/app

      - name: Building Docker image on remote server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/${{ secrets.USER }}/app
            sudo rm -f .env
            touch .env

            echo SECRET_KEY="${{ secrets.SECRET_KEY }}" >> .env
            echo CSRF_TRUSTED="${{ secrets.HOST }}" >> .env
            echo DB_ENGINE="django.db.backends.postgresql" >> .env
            echo DB_NAME="${{ secrets.DB_NAME }}" >> .env
            echo DB_USER="${{ secrets.DB_USER }}" >> .env
            echo POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo DB_HOST="postgresql" >> .env
            echo DB_PORT="${{ secrets.DB_PORT }}" >> .env

            echo CELERY_BROKER_URL="${{ secrets.CELERY_BROKER_URL }}" >> .env
            echo CELERY_RESULT_BACKEND="${{ secrets.CELERY_RESULT_BACKEND }}" >> .env

            sudo docker compose --file ./infra/docker-compose.yaml stop
            sudo docker compose --file ./infra/docker-compose.yaml up --build -d --force-recreate
            sudo docker compose exec -T django python manage.py makemigrations
            sudo docker compose exec -T django python manage.py migrate
            sudo docker compose exec -T django python manage.py collectstatic --no-input
